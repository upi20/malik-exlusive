<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
	<title></title>
	<meta name="generator" content="LibreOffice 6.0.6.2 (Linux)"/>
	<meta name="created" content="00:00:00"/>
	<meta name="changed" content="2018-11-14T15:18:35.914087800"/>
</head>
<body lang="en-US" dir="ltr">
<p>&lt;?php</p>
<p>defined('BASEPATH') OR exit('No direct script access allowed');</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Base Site URL</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| URL to your CodeIgniter root. Typically this will be your base
URL,</p>
<p>| WITH a trailing slash:</p>
<p>|</p>
<p>|	http://example.com/</p>
<p>|</p>
<p>| WARNING: You MUST set this value!</p>
<p>|</p>
<p>| If it is not set, then CodeIgniter will try guess the protocol
and path</p>
<p>| your installation, but due to security concerns the hostname
will be set</p>
<p>| to $_SERVER['SERVER_ADDR'] if available, or localhost otherwise.</p>
<p>| The auto-detection mechanism exists only for convenience during</p>
<p>| development and MUST NOT be used in production!</p>
<p>|</p>
<p>| If you need to allow multiple domains, remember that this file
is still</p>
<p>| a PHP script and you can easily do that on your own.</p>
<p>|</p>
<p>*/</p>
<p>// $config['base_url'] = 'http://localhost/siap/';</p>
<p>$config['base_url'] = 'http://43.249.140.89:3080/siap/';</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Index File</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| Typically this will be your index.php file, unless you've
renamed it to</p>
<p>| something else. If you are using mod_rewrite to remove the page
set this</p>
<p>| variable so that it is blank.</p>
<p>|</p>
<p>*/</p>
<p>$config['index_page'] = '';</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| URI PROTOCOL</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| This item determines which server global should be used to
retrieve the</p>
<p>| URI string.  The default setting of 'REQUEST_URI' works for most
servers.</p>
<p>| If your links do not seem to work, try one of the other
delicious flavors:</p>
<p>|</p>
<p>| 'REQUEST_URI'    Uses $_SERVER['REQUEST_URI']</p>
<p>| 'QUERY_STRING'   Uses $_SERVER['QUERY_STRING']</p>
<p>| 'PATH_INFO'      Uses $_SERVER['PATH_INFO']</p>
<p>|</p>
<p>| WARNING: If you set this to 'PATH_INFO', URIs will always be
URL-decoded!</p>
<p>*/</p>
<p>$config['uri_protocol']	= 'REQUEST_URI';</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| URL suffix</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| This option allows you to add a suffix to all URLs generated by
CodeIgniter.</p>
<p>| For more information please see the user guide:</p>
<p>|</p>
<p>| https://codeigniter.com/user_guide/general/urls.html</p>
<p>*/</p>
<p>$config['url_suffix'] = '';</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Default Language</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| This determines which set of language files should be used. Make
sure</p>
<p>| there is an available translation if you intend to use something
other</p>
<p>| than english.</p>
<p>|</p>
<p>*/</p>
<p>$config['language']	= 'english';</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Default Character Set</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| This determines which character set is used by default in
various methods</p>
<p>| that require a character set to be provided.</p>
<p>|</p>
<p>| See http://php.net/htmlspecialchars for a list of supported
charsets.</p>
<p>|</p>
<p>*/</p>
<p>$config['charset'] = 'UTF-8';</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Enable/Disable System Hooks</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| If you would like to use the 'hooks' feature you must enable it
by</p>
<p>| setting this variable to TRUE (boolean).  See the user guide for
details.</p>
<p>|</p>
<p>*/</p>
<p>$config['enable_hooks'] = FALSE;</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Class Extension Prefix</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| This item allows you to set the filename/classname prefix when
extending</p>
<p>| native libraries.  For more information please see the user
guide:</p>
<p>|</p>
<p>| https://codeigniter.com/user_guide/general/core_classes.html</p>
<p>|
https://codeigniter.com/user_guide/general/creating_libraries.html</p>
<p>|</p>
<p>*/</p>
<p>$config['subclass_prefix'] = 'MY_';</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Composer auto-loading</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| Enabling this setting will tell CodeIgniter to look for a
Composer</p>
<p>| package auto-loader script in application/vendor/autoload.php.</p>
<p>|</p>
<p>|	$config['composer_autoload'] = TRUE;</p>
<p>|</p>
<p>| Or if you have your vendor/ directory located somewhere else,
you</p>
<p>| can opt to set a specific path as well:</p>
<p>|</p>
<p>|	$config['composer_autoload'] = '/path/to/vendor/autoload.php';</p>
<p>|</p>
<p>| For more information about Composer, please visit
http://getcomposer.org/</p>
<p>|</p>
<p>| Note: This will NOT disable or override the CodeIgniter-specific</p>
<p>|	autoloading (application/config/autoload.php)</p>
<p>*/</p>
<p>$config['composer_autoload'] = FALSE;</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Allowed URL Characters</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| This lets you specify which characters are permitted within your
URLs.</p>
<p>| When someone tries to submit a URL with disallowed characters
they will</p>
<p>| get a warning message.</p>
<p>|</p>
<p>| As a security measure you are STRONGLY encouraged to restrict
URLs to</p>
<p>| as few characters as possible.  By default only these are
allowed: a-z 0-9~%.:_-</p>
<p>|</p>
<p>| Leave blank to allow all characters -- but only if you are
insane.</p>
<p>|</p>
<p>| The configured value is actually a regular expression character
group</p>
<p>| and it will be executed as: !
preg_match('/^[&lt;permitted_uri_chars&gt;]+$/i</p>
<p>|</p>
<p>| DO NOT CHANGE THIS UNLESS YOU FULLY UNDERSTAND THE
REPERCUSSIONS!!</p>
<p>|</p>
<p>*/</p>
<p>$config['permitted_uri_chars'] = 'a-z 0-9~%.:_\-';</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Enable Query Strings</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| By default CodeIgniter uses search-engine friendly segment based
URLs:</p>
<p>| example.com/who/what/where/</p>
<p>|</p>
<p>| You can optionally enable standard query string based URLs:</p>
<p>| example.com?who=me&amp;what=something&amp;where=here</p>
<p>|</p>
<p>| Options are: TRUE or FALSE (boolean)</p>
<p>|</p>
<p>| The other items let you set the query string 'words' that will</p>
<p>| invoke your controllers and its functions:</p>
<p>| example.com/index.php?c=controller&amp;m=function</p>
<p>|</p>
<p>| Please note that some of the helpers won't work as expected when</p>
<p>| this feature is enabled, since CodeIgniter is designed primarily
to</p>
<p>| use segment based URLs.</p>
<p>|</p>
<p>*/</p>
<p>$config['enable_query_strings'] = FALSE;</p>
<p>$config['controller_trigger'] = 'c';</p>
<p>$config['function_trigger'] = 'm';</p>
<p>$config['directory_trigger'] = 'd';</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Allow $_GET array</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| By default CodeIgniter enables access to the $_GET array.  If
for some</p>
<p>| reason you would like to disable it, set 'allow_get_array' to
FALSE.</p>
<p>|</p>
<p>| WARNING: This feature is DEPRECATED and currently available only</p>
<p>|          for backwards compatibility purposes!</p>
<p>|</p>
<p>*/</p>
<p>$config['allow_get_array'] = TRUE;</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Error Logging Threshold</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| You can enable error logging by setting a threshold over zero.
The</p>
<p>| threshold determines what gets logged. Threshold options are:</p>
<p>|</p>
<p>|	0 = Disables logging, Error logging TURNED OFF</p>
<p>|	1 = Error Messages (including PHP errors)</p>
<p>|	2 = Debug Messages</p>
<p>|	3 = Informational Messages</p>
<p>|	4 = All Messages</p>
<p>|</p>
<p>| You can also pass an array with threshold levels to show
individual error types</p>
<p>|</p>
<p>| 	array(2) = Debug Messages, without Error Messages</p>
<p>|</p>
<p>| For a live site you'll usually only enable Errors (1) to be
logged otherwise</p>
<p>| your log files will fill up very fast.</p>
<p>|</p>
<p>*/</p>
<p>$config['log_threshold'] = 0;</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Error Logging Directory Path</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| Leave this BLANK unless you would like to set something other
than the default</p>
<p>| application/logs/ directory. Use a full server path with
trailing slash.</p>
<p>|</p>
<p>*/</p>
<p>$config['log_path'] = '';</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Log File Extension</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| The default filename extension for log files. The default 'php'
allows for</p>
<p>| protecting the log files via basic scripting, when they are to
be stored</p>
<p>| under a publicly accessible directory.</p>
<p>|</p>
<p>| Note: Leaving it blank will default to 'php'.</p>
<p>|</p>
<p>*/</p>
<p>$config['log_file_extension'] = '';</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Log File Permissions</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| The file system permissions to be applied on newly created log
files.</p>
<p>|</p>
<p>| IMPORTANT: This MUST be an integer (no quotes) and you MUST use
octal</p>
<p>|            integer notation (i.e. 0700, 0644, etc.)</p>
<p>*/</p>
<p>$config['log_file_permissions'] = 0644;</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Date Format for Logs</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| Each item that is logged has an associated date. You can use PHP
date</p>
<p>| codes to set your own date formatting</p>
<p>|</p>
<p>*/</p>
<p>$config['log_date_format'] = 'Y-m-d H:i:s';</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Error Views Directory Path</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| Leave this BLANK unless you would like to set something other
than the default</p>
<p>| application/views/errors/ directory.  Use a full server path
with trailing slash.</p>
<p>|</p>
<p>*/</p>
<p>$config['error_views_path'] = '';</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Cache Directory Path</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| Leave this BLANK unless you would like to set something other
than the default</p>
<p>| application/cache/ directory.  Use a full server path with
trailing slash.</p>
<p>|</p>
<p>*/</p>
<p>$config['cache_path'] = '';</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Cache Include Query String</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| Whether to take the URL query string into consideration when
generating</p>
<p>| output cache files. Valid options are:</p>
<p>|</p>
<p>|	FALSE      = Disabled</p>
<p>|	TRUE       = Enabled, take all query parameters into account.</p>
<p>|	             Please be aware that this may result in numerous
cache</p>
<p>|	             files generated for the same page over and over
again.</p>
<p>|	array('q') = Enabled, but only take into account the specified
list</p>
<p>|	             of query parameters.</p>
<p>|</p>
<p>*/</p>
<p>$config['cache_query_string'] = FALSE;</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Encryption Key</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| If you use the Encryption class, you must set an encryption key.</p>
<p>| See the user guide for more info.</p>
<p>|</p>
<p>| https://codeigniter.com/user_guide/libraries/encryption.html</p>
<p>|</p>
<p>*/</p>
<p>$config['encryption_key'] = '';</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Session Variables</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| 'sess_driver'</p>
<p>|</p>
<p>|	The storage driver to use: files, database, redis, memcached</p>
<p>|</p>
<p>| 'sess_cookie_name'</p>
<p>|</p>
<p>|	The session cookie name, must contain only [0-9a-z_-] characters</p>
<p>|</p>
<p>| 'sess_expiration'</p>
<p>|</p>
<p>|	The number of SECONDS you want the session to last.</p>
<p>|	Setting to 0 (zero) means expire when the browser is closed.</p>
<p>|</p>
<p>| 'sess_save_path'</p>
<p>|</p>
<p>|	The location to save sessions to, driver dependent.</p>
<p>|</p>
<p>|	For the 'files' driver, it's a path to a writable directory.</p>
<p>|	WARNING: Only absolute paths are supported!</p>
<p>|</p>
<p>|	For the 'database' driver, it's a table name.</p>
<p>|	Please read up the manual for the format with other session
drivers.</p>
<p>|</p>
<p>|	IMPORTANT: You are REQUIRED to set a valid save path!</p>
<p>|</p>
<p>| 'sess_match_ip'</p>
<p>|</p>
<p>|	Whether to match the user's IP address when reading the session
data.</p>
<p>|</p>
<p>|	WARNING: If you're using the database driver, don't forget to
update</p>
<p>|	         your session table's PRIMARY KEY when changing this
setting.</p>
<p>|</p>
<p>| 'sess_time_to_update'</p>
<p>|</p>
<p>|	How many seconds between CI regenerating the session ID.</p>
<p>|</p>
<p>| 'sess_regenerate_destroy'</p>
<p>|</p>
<p>|	Whether to destroy session data associated with the old session
ID</p>
<p>|	when auto-regenerating the session ID. When set to FALSE, the
data</p>
<p>|	will be later deleted by the garbage collector.</p>
<p>|</p>
<p>| Other session cookie settings are shared with the rest of the
application,</p>
<p>| except for 'cookie_prefix' and 'cookie_httponly', which are
ignored here.</p>
<p>|</p>
<p>*/</p>
<p>$config['sess_driver'] = 'files';</p>
<p>$config['sess_cookie_name'] = 'ci_session';</p>
<p>$config['sess_expiration'] = 7200;</p>
<p>$config['sess_save_path'] = NULL;</p>
<p>$config['sess_match_ip'] = FALSE;</p>
<p>$config['sess_time_to_update'] = 300;</p>
<p>$config['sess_regenerate_destroy'] = FALSE;</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Cookie Related Variables</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| 'cookie_prefix'   = Set a cookie name prefix if you need to
avoid collisions</p>
<p>| 'cookie_domain'   = Set to .your-domain.com for site-wide
cookies</p>
<p>| 'cookie_path'     = Typically will be a forward slash</p>
<p>| 'cookie_secure'   = Cookie will only be set if a secure HTTPS
connection exists.</p>
<p>| 'cookie_httponly' = Cookie will only be accessible via HTTP(S)
(no javascript)</p>
<p>|</p>
<p>| Note: These settings (with the exception of 'cookie_prefix' and</p>
<p>|       'cookie_httponly') will also affect sessions.</p>
<p>|</p>
<p>*/</p>
<p>$config['cookie_prefix']	= '';</p>
<p>$config['cookie_domain']	= '';</p>
<p>$config['cookie_path']		= '/';</p>
<p>$config['cookie_secure']	= FALSE;</p>
<p>$config['cookie_httponly'] 	= FALSE;</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Standardize newlines</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| Determines whether to standardize newline characters in input
data,</p>
<p>| meaning to replace \r\n, \r, \n occurrences with the PHP_EOL
value.</p>
<p>|</p>
<p>| WARNING: This feature is DEPRECATED and currently available only</p>
<p>|          for backwards compatibility purposes!</p>
<p>|</p>
<p>*/</p>
<p>$config['standardize_newlines'] = FALSE;</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Global XSS Filtering</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| Determines whether the XSS filter is always active when GET,
POST or</p>
<p>| COOKIE data is encountered</p>
<p>|</p>
<p>| WARNING: This feature is DEPRECATED and currently available only</p>
<p>|          for backwards compatibility purposes!</p>
<p>|</p>
<p>*/</p>
<p>$config['global_xss_filtering'] = FALSE;</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Cross Site Request Forgery</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Enables a CSRF cookie token to be set. When set to TRUE, token
will be</p>
<p>| checked on a submitted form. If you are accepting user data, it
is strongly</p>
<p>| recommended CSRF protection be enabled.</p>
<p>|</p>
<p>| 'csrf_token_name' = The token name</p>
<p>| 'csrf_cookie_name' = The cookie name</p>
<p>| 'csrf_expire' = The number in seconds the token should expire.</p>
<p>| 'csrf_regenerate' = Regenerate token on every submission</p>
<p>| 'csrf_exclude_uris' = Array of URIs which ignore CSRF checks</p>
<p>*/</p>
<p>$config['csrf_protection'] = FALSE;</p>
<p>$config['csrf_token_name'] = 'csrf_test_name';</p>
<p>$config['csrf_cookie_name'] = 'csrf_cookie_name';</p>
<p>$config['csrf_expire'] = 7200;</p>
<p>$config['csrf_regenerate'] = TRUE;</p>
<p>$config['csrf_exclude_uris'] = array();</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Output Compression</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| Enables Gzip output compression for faster page loads.  When
enabled,</p>
<p>| the output class will test whether your server supports Gzip.</p>
<p>| Even if it does, however, not all browsers support compression</p>
<p>| so enable only if you are reasonably sure your visitors can
handle it.</p>
<p>|</p>
<p>| Only used if zlib.output_compression is turned off in your
php.ini.</p>
<p>| Please do not use it together with httpd-level output
compression.</p>
<p>|</p>
<p>| VERY IMPORTANT:  If you are getting a blank page when
compression is enabled it</p>
<p>| means you are prematurely outputting something to your browser.
It could</p>
<p>| even be a line of whitespace at the end of one of your scripts. 
For</p>
<p>| compression to work, nothing can be sent before the output
buffer is called</p>
<p>| by the output class.  Do not 'echo' any values with compression
enabled.</p>
<p>|</p>
<p>*/</p>
<p>$config['compress_output'] = FALSE;</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Master Time Reference</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| Options are 'local' or any PHP supported timezone. This
preference tells</p>
<p>| the system whether to use your server's local time as the master
'now'</p>
<p>| reference, or convert it to the configured one timezone. See the
'date</p>
<p>| helper' page of the user guide for information regarding date
handling.</p>
<p>|</p>
<p>*/</p>
<p>$config['time_reference'] = 'local';</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Rewrite PHP Short Tags</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| If your PHP installation does not have short tag support enabled
CI</p>
<p>| can rewrite the tags on-the-fly, enabling you to utilize that
syntax</p>
<p>| in your view files.  Options are TRUE or FALSE (boolean)</p>
<p>|</p>
<p>| Note: You need to have eval() enabled for this to work.</p>
<p>|</p>
<p>*/</p>
<p>$config['rewrite_short_tags'] = FALSE;</p>
<p><br/>
<br/>

</p>
<p>/*</p>
<p>|--------------------------------------------------------------------------</p>
<p>| Reverse Proxy IPs</p>
<p>|--------------------------------------------------------------------------</p>
<p>|</p>
<p>| If your server is behind a reverse proxy, you must whitelist the
proxy</p>
<p>| IP addresses from which CodeIgniter should trust headers such as</p>
<p>| HTTP_X_FORWARDED_FOR and HTTP_CLIENT_IP in order to properly
identify</p>
<p>| the visitor's IP address.</p>
<p>|</p>
<p>| You can use both an array or a comma-separated list of proxy
addresses,</p>
<p>| as well as specifying whole subnets. Here are a few examples:</p>
<p>|</p>
<p>| Comma-separated:	'10.0.1.200,192.168.5.0/24'</p>
<p>| Array:		array('10.0.1.200', '192.168.5.0/24')</p>
<p>*/</p>
<p>$config['proxy_ips'] = '';</p>
</body>
</html>